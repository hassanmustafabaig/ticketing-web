{"ast":null,"code":"import { deliveryConstants } from '../constants';\nimport { deliveryService } from '../services';\nimport { alertActions } from '.';\nimport { history } from '../helpers';\nexport const deliveryActions = {\n  getAll\n};\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    deliveryService.getAll().then(deliveries => dispatch(success(deliveries)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: deliveryConstants.GET_ALL_REQUEST\n    };\n  }\n\n  function success(deliveries) {\n    return {\n      type: deliveryConstants.GET_ALL_SUCCESS,\n      deliveries\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: deliveryConstants.GET_ALL_FAILURE,\n      error\n    };\n  }\n}\n\nfunction addDelivery(delivery) {\n  return dispatch => {\n    dispatch(request(delivery));\n    deliveryService.addDelivery(delivery).then(user => {\n      dispatch(success());\n      history.push('/delivery');\n      dispatch(alertActions.success('Delivery added successful'));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(delivery) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      delivery\n    };\n  }\n\n  function success(delivery) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      delivery\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/home/vend/Projects/ticketing/fe/old/remote/ticketing-web/src/actions/delivery.actions.js"],"names":["deliveryConstants","deliveryService","alertActions","history","deliveryActions","getAll","dispatch","request","then","deliveries","success","error","failure","toString","type","GET_ALL_REQUEST","GET_ALL_SUCCESS","GET_ALL_FAILURE","addDelivery","delivery","user","push","userConstants","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,cAAlC;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,YAAT,QAA6B,GAA7B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,OAAO,MAAMC,eAAe,GAAG;AAC3BC,EAAAA;AAD2B,CAAxB;;AAIP,SAASA,MAAT,GAAkB;AACd,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAEAN,IAAAA,eAAe,CAACI,MAAhB,GACKG,IADL,CAEQC,UAAU,IAAIH,QAAQ,CAACI,OAAO,CAACD,UAAD,CAAR,CAF9B,EAGQE,KAAK,IAAIL,QAAQ,CAACM,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAHzB;AAKH,GARD;;AAUA,WAASN,OAAT,GAAmB;AAAE,WAAO;AAAEO,MAAAA,IAAI,EAAEd,iBAAiB,CAACe;AAA1B,KAAP;AAAoD;;AACzE,WAASL,OAAT,CAAiBD,UAAjB,EAA6B;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAEd,iBAAiB,CAACgB,eAA1B;AAA2CP,MAAAA;AAA3C,KAAP;AAAgE;;AAC/F,WAASG,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEG,MAAAA,IAAI,EAAEd,iBAAiB,CAACiB,eAA1B;AAA2CN,MAAAA;AAA3C,KAAP;AAA2D;AACxF;;AAED,SAASO,WAAT,CAAqBC,QAArB,EAA+B;AAC3B,SAAOb,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,CAACY,QAAD,CAAR,CAAR;AAEAlB,IAAAA,eAAe,CAACiB,WAAhB,CAA4BC,QAA5B,EACKX,IADL,CAEQY,IAAI,IAAI;AACJd,MAAAA,QAAQ,CAACI,OAAO,EAAR,CAAR;AACAP,MAAAA,OAAO,CAACkB,IAAR,CAAa,WAAb;AACAf,MAAAA,QAAQ,CAACJ,YAAY,CAACQ,OAAb,CAAqB,2BAArB,CAAD,CAAR;AACH,KANT,EAOQC,KAAK,IAAI;AACLL,MAAAA,QAAQ,CAACM,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAR;AACAP,MAAAA,QAAQ,CAACJ,YAAY,CAACS,KAAb,CAAmBA,KAAK,CAACE,QAAN,EAAnB,CAAD,CAAR;AACH,KAVT;AAYH,GAfD;;AAiBA,WAASN,OAAT,CAAiBY,QAAjB,EAA2B;AAAE,WAAO;AAAEL,MAAAA,IAAI,EAAEQ,aAAa,CAACC,gBAAtB;AAAwCJ,MAAAA;AAAxC,KAAP;AAA2D;;AACxF,WAAST,OAAT,CAAiBS,QAAjB,EAA2B;AAAE,WAAO;AAAEL,MAAAA,IAAI,EAAEQ,aAAa,CAACE,gBAAtB;AAAwCL,MAAAA;AAAxC,KAAP;AAA2D;;AACxF,WAASP,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEG,MAAAA,IAAI,EAAEQ,aAAa,CAACG,gBAAtB;AAAwCd,MAAAA;AAAxC,KAAP;AAAwD;AACrF","sourcesContent":["import { deliveryConstants } from '../constants';\nimport { deliveryService } from '../services';\nimport { alertActions } from '.';\nimport { history } from '../helpers';\n\nexport const deliveryActions = {\n    getAll\n};\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        deliveryService.getAll()\n            .then(\n                deliveries => dispatch(success(deliveries)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: deliveryConstants.GET_ALL_REQUEST } }\n    function success(deliveries) { return { type: deliveryConstants.GET_ALL_SUCCESS, deliveries } }\n    function failure(error) { return { type: deliveryConstants.GET_ALL_FAILURE, error } }\n}\n\nfunction addDelivery(delivery) {\n    return dispatch => {\n        dispatch(request(delivery));\n\n        deliveryService.addDelivery(delivery)\n            .then(\n                user => { \n                    dispatch(success());\n                    history.push('/delivery');\n                    dispatch(alertActions.success('Delivery added successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(delivery) { return { type: userConstants.REGISTER_REQUEST, delivery } }\n    function success(delivery) { return { type: userConstants.REGISTER_SUCCESS, delivery } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}"]},"metadata":{},"sourceType":"module"}