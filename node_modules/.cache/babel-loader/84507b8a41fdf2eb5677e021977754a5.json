{"ast":null,"code":"var _jsxFileName = \"/home/vend/Projects/ticketing/fe/old/remote/ticketing-web/src/Delivery/DeliveryFormView.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deliveryActions } from '../actions';\nimport DateTimePicker from 'react-datetime-picker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DeliveryFormView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      delivery: {\n        currentDistanceFromDestination: 0,\n        customerType: '',\n        deliveryStatus: '',\n        expectedDeliveryTime: '',\n        riderRating: 0,\n        timeToPrepreFood: 0,\n        timeToReachDestination: 0\n      },\n      submitted: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    const {\n      delivery\n    } = this.state;\n    this.setState({\n      delivery: { ...delivery,\n        [name]: value\n      }\n    });\n  }\n\n  handleChangeDDCustomerType(event) {\n    let deliveryChanges = this.state.delivery;\n    deliveryChanges.customerType = event.target.value;\n    this.setState({\n      delivery: deliveryChanges\n    });\n  }\n\n  handleChangeDDDeliveryStatus(event) {\n    let deliveryChanges = this.state.delivery;\n    deliveryChanges.deliveryStatus = event.target.value;\n    this.setState({\n      delivery: deliveryChanges\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const {\n      delivery\n    } = this.state;\n\n    if (delivery.currentDistanceFromDestination && delivery.customerType && delivery.deliveryStatus && delivery.expectedDeliveryTime && delivery.timeToPrepreFood && delivery.timeToReachDestination) {\n      this.props.addDelivery(delivery);\n    }\n  }\n\n  render() {\n    const {\n      adding\n    } = this.props;\n    const {\n      delivery,\n      submitted\n    } = this.state;\n    let startDate = new Date();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Delivery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"form\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'form-group' + (submitted && !delivery.currentDistanceFromDestination ? ' has-error' : ''),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currentDistanceFromDestination\",\n              children: \"Current Distance From Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: 0,\n              className: \"form-control\",\n              name: \"currentDistanceFromDestination\",\n              value: delivery.currentDistanceFromDestination,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), submitted && !delivery.currentDistanceFromDestination && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"help-block\",\n              children: \"Current dustance from destination is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'form-group' + (submitted && !delivery.customerType ? ' has-error' : ''),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"customerType\",\n              children: \"Customer Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: this.state.delivery.customerType,\n              onChange: this.handleChangeDDCustomerType,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"VIP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"LOYAL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"NEW\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), submitted && !delivery.customerType && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"help-block\",\n              children: \"Customer type is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'form-group' + (submitted && !delivery.deliveryStatus ? ' has-error' : ''),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"deliveryStatus\",\n              children: \"Delivery Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: this.state.delivery.deliveryStatus,\n              onChange: this.handleChangeDDDeliveryStatus,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Order Received\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Order Preparing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Order Picked-up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Irder Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), submitted && !delivery.deliveryStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"help-block\",\n              children: \"Delivery status is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'form-group' + (submitted && !delivery.expectedDeliveryTime ? ' has-error' : ''),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"expectedDeliveryTime\",\n              children: \"Expected Delivery Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n              value: startDate,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), submitted && !delivery.expectedDeliveryTime && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"help-block\",\n              children: \"Expected delivery time is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'form-group' + (submitted && !delivery.timeToPrepreFood ? ' has-error' : ''),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"timeToPrepreFood\",\n              children: \"Time To Prepare Food\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              name: \"timeToPrepreFood\",\n              value: delivery.timeToPrepreFood,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), submitted && !delivery.timeToPrepreFood && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"help-block\",\n              children: \"Time to prepare food is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'form-group' + (submitted && !delivery.timeToReachDestination ? ' has-error' : ''),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"timeToReachDestination\",\n              children: \"Time To Reach Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              name: \"timeToReachDestination\",\n              value: delivery.timeToReachDestination,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), submitted && !delivery.timeToReachDestination && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"help-block\",\n              children: \"Time to reach destination is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), adding, /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/delivery\",\n              className: \"btn btn-link\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    adding\n  } = state.delivery;\n  return {\n    adding\n  };\n}\n\nconst actionCreators = {\n  addDelivery: deliveryActions.addDelivery\n};\nconst connectedDeliveryFormView = connect(mapState, actionCreators)(DeliveryFormView);\nexport { connectedDeliveryFormView as DeliveryFormView };","map":{"version":3,"sources":["/home/vend/Projects/ticketing/fe/old/remote/ticketing-web/src/Delivery/DeliveryFormView.jsx"],"names":["React","Link","connect","deliveryActions","DateTimePicker","DeliveryFormView","Component","constructor","props","state","delivery","currentDistanceFromDestination","customerType","deliveryStatus","expectedDeliveryTime","riderRating","timeToPrepreFood","timeToReachDestination","submitted","handleChange","bind","handleSubmit","event","name","value","target","setState","handleChangeDDCustomerType","deliveryChanges","handleChangeDDDeliveryStatus","preventDefault","addDelivery","render","adding","startDate","Date","mapState","actionCreators","connectedDeliveryFormView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deliveryActions } from '../actions';\nimport DateTimePicker from 'react-datetime-picker';\n\n\n\nclass DeliveryFormView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            delivery: {\n                currentDistanceFromDestination: 0,\n                customerType: '',\n                deliveryStatus: '',\n                expectedDeliveryTime: '',\n                riderRating: 0,\n                timeToPrepreFood: 0,\n                timeToReachDestination: 0\n            },\n            submitted: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target;\n        const { delivery } = this.state;\n        this.setState({\n            delivery: {\n                ...delivery,\n                [name]: value\n            }\n        });\n    }\n\n    handleChangeDDCustomerType(event){\n        let deliveryChanges = this.state.delivery;\n        deliveryChanges.customerType = event.target.value;\n\n        this.setState({delivery : deliveryChanges});\n    }\n\n    handleChangeDDDeliveryStatus(event){\n        let deliveryChanges = this.state.delivery;\n        deliveryChanges.deliveryStatus = event.target.value;\n\n        this.setState({delivery : deliveryChanges});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.setState({ submitted: true });\n        const { delivery } = this.state;\n        if (delivery.currentDistanceFromDestination &&\n            delivery.customerType &&\n            delivery.deliveryStatus &&\n            delivery.expectedDeliveryTime &&\n            delivery.timeToPrepreFood &&\n            delivery.timeToReachDestination) {\n            this.props.addDelivery(delivery);\n        }\n    }\n\n    render() {\n        const { adding } = this.props;\n        const { delivery, submitted } = this.state;\n        let startDate = new Date()\n        return (\n            <div className=\"container\">\n                <div className=\"col-md-12\">\n                    <h2>Add Delivery</h2>\n                    <form name=\"form\" onSubmit={this.handleSubmit}>\n                        <div className={'form-group' + (submitted && !delivery.currentDistanceFromDestination ? ' has-error' : '')}>\n                            <label htmlFor=\"currentDistanceFromDestination\">Current Distance From Destination</label>\n                            <input type=\"number\" min={0} className=\"form-control\" name=\"currentDistanceFromDestination\" value={delivery.currentDistanceFromDestination} onChange={this.handleChange} />\n                            {submitted && !delivery.currentDistanceFromDestination &&\n                                <div className=\"help-block\">Current dustance from destination is required</div>\n                            }\n                        </div>\n                        <div className={'form-group' + (submitted && !delivery.customerType ? ' has-error' : '')}>\n                            <label htmlFor=\"customerType\">Customer Type</label>\n                            <select value={this.state.delivery.customerType} onChange={this.handleChangeDDCustomerType}>\n                                <option value=\"0\">VIP</option>\n                                <option value=\"1\">LOYAL</option>\n                                <option value=\"2\">NEW</option>\n                                </select>\n                            {submitted && !delivery.customerType &&\n                                <div className=\"help-block\">Customer type is required</div>\n                            }\n                        </div>\n                        <div className={'form-group' + (submitted && !delivery.deliveryStatus ? ' has-error' : '')}>\n                            <label htmlFor=\"deliveryStatus\">Delivery Status</label>\n                            <select value={this.state.delivery.deliveryStatus} onChange={this.handleChangeDDDeliveryStatus}>\n                                <option value=\"0\">Order Received</option>\n                                <option value=\"1\">Order Preparing</option>\n                                <option value=\"2\">Order Picked-up</option>\n                                <option value=\"3\">Irder Delivered</option>\n                                </select>\n                            {submitted && !delivery.deliveryStatus &&\n                                <div className=\"help-block\">Delivery status is required</div>\n                            }\n                        </div>\n                        <div className={'form-group' + (submitted && !delivery.expectedDeliveryTime ? ' has-error' : '')}>\n                            <label htmlFor=\"expectedDeliveryTime\">Expected Delivery Time</label>\n                            <DateTimePicker value={startDate} onChange={this.handleChange} />                            \n                            {submitted && !delivery.expectedDeliveryTime &&\n                                <div className=\"help-block\">Expected delivery time is required</div>\n                            }\n                        </div>\n                        <div className={'form-group' + (submitted && !delivery.timeToPrepreFood ? ' has-error' : '')}>\n                            <label htmlFor=\"timeToPrepreFood\">Time To Prepare Food</label>\n                            <input type=\"number\" className=\"form-control\" name=\"timeToPrepreFood\" value={delivery.timeToPrepreFood} onChange={this.handleChange} />\n                            {submitted && !delivery.timeToPrepreFood &&\n                                <div className=\"help-block\">Time to prepare food is required</div>\n                            }\n                        </div>\n                        <div className={'form-group' + (submitted && !delivery.timeToReachDestination ? ' has-error' : '')}>\n                            <label htmlFor=\"timeToReachDestination\">Time To Reach Destination</label>\n                            <input type=\"number\" className=\"form-control\" name=\"timeToReachDestination\" value={delivery.timeToReachDestination} onChange={this.handleChange} />\n                            {submitted && !delivery.timeToReachDestination &&\n                                <div className=\"help-block\">Time to reach destination is required</div>\n                            }\n                        </div>\n\n\n                        <div className=\"form-group\">\n                            <button className=\"btn btn-primary\">Add</button>\n                            {adding}\n                            <Link to=\"/delivery\" className=\"btn btn-link\">Cancel</Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapState(state) {\n    const { adding } = state.delivery;\n    return { adding };\n}\n\nconst actionCreators = {\n    addDelivery: deliveryActions.addDelivery\n}\n\nconst connectedDeliveryFormView = connect(mapState, actionCreators)(DeliveryFormView);\nexport { connectedDeliveryFormView as DeliveryFormView };"]},"metadata":{},"sourceType":"module"}