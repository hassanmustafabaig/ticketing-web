{"ast":null,"code":"import config from '../config/config';\nimport { authHeader } from '../helpers';\nexport const deliveryService = {\n  getAll\n};\n\nfunction getAll() {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(config.apiUrl + '/delivery/get-all', requestOptions).then(handleResponse);\n}\n\nfunction addDelivery(user) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`${config.apiUrl}/users/register`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401 || response.status === 403) {\n        // auto logout if 401 or 403 response returned from api\n        logout();\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"sources":["/home/vend/Projects/ticketing/fe/old/remote/ticketing-web/src/services/delivery.service.js"],"names":["config","authHeader","deliveryService","getAll","requestOptions","method","headers","fetch","apiUrl","then","handleResponse","addDelivery","user","body","JSON","stringify","response","text","data","parse","ok","status","logout","error","message","statusText","Promise","reject"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAO,MAAMC,eAAe,GAAG;AAC3BC,EAAAA;AAD2B,CAAxB;;AAIP,SAASA,MAAT,GAAkB;AACd,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAEL,UAAU;AAFA,GAAvB;AAKA,SAAOM,KAAK,CAACP,MAAM,CAACQ,MAAP,GAAgB,mBAAjB,EAAqCJ,cAArC,CAAL,CAA0DK,IAA1D,CAA+DC,cAA/D,CAAP;AACH;;AAED,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACvB,QAAMR,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAHa,GAAvB;AAMA,SAAOL,KAAK,CAAE,GAAEP,MAAM,CAACQ,MAAO,iBAAlB,EAAoCJ,cAApC,CAAL,CAAyDK,IAAzD,CAA8DC,cAA9D,CAAP;AACH;;AAED,SAASA,cAAT,CAAwBM,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,GAAgBR,IAAhB,CAAqBQ,IAAI,IAAI;AAChC,UAAMC,IAAI,GAAGD,IAAI,IAAIH,IAAI,CAACK,KAAL,CAAWF,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAApB,IAA2BL,QAAQ,CAACK,MAAT,KAAoB,GAAnD,EAAwD;AACpD;AACAC,QAAAA,MAAM;AACT;;AAED,YAAMC,KAAK,GAAIL,IAAI,IAAIA,IAAI,CAACM,OAAd,IAA0BR,QAAQ,CAACS,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAED,WAAOL,IAAP;AACH,GAbM,CAAP;AAcH","sourcesContent":["import config from '../config/config';\nimport { authHeader } from '../helpers';\n\nexport const deliveryService = {\n    getAll\n};\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(config.apiUrl + '/delivery/get-all',requestOptions).then(handleResponse);\n}\n\nfunction addDelivery(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`${config.apiUrl}/users/register`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401 || response.status === 403) {\n                // auto logout if 401 or 403 response returned from api\n                logout();                \n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}"]},"metadata":{},"sourceType":"module"}