{"ast":null,"code":"var _jsxFileName = \"/home/vend/Projects/ticketing/fe/old/ticketing_web/src/Delivery/DeliveryListView.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { deliveryActions } from '../actions';\nimport { MDBDataTable } from \"mdbreact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DeliveryListView extends React.Component {\n  componentDidMount() {\n    this.props.getAll();\n  }\n\n  render() {\n    const {\n      deliveries\n    } = this.props;\n    const data = {\n      columns: [{\n        label: \"Delivery ID\",\n        field: \"delivery.id\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"Customer Type\",\n        field: \"customerType\",\n        sort: \"asc\",\n        width: 200\n      }, {\n        label: \"Delivery Status\",\n        field: \"deliveryStatus\",\n        sort: \"asc\",\n        width: 200\n      }, {\n        label: \"Expected Delivery Time\",\n        field: \"expectedDeliveryTime\",\n        sort: \"asc\",\n        width: 250\n      }, {\n        label: \"Start date\",\n        field: \"date\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"Salary\",\n        field: \"salary\",\n        sort: \"asc\",\n        width: 100\n      }],\n      rows: [{\n        name: \"Tiger Nixon\",\n        position: \"System Architect\",\n        office: \"Edinburgh\",\n        age: \"61\",\n        date: \"2011/04/25\",\n        salary: \"$320\"\n      }, {\n        name: \"Yuri Berry\",\n        position: \"Chief Marketing Officer (CMO)\",\n        office: \"New York\",\n        age: \"40\",\n        date: \"2009/06/25\",\n        salary: \"$675\"\n      }, {\n        name: \"Caesar Vance\",\n        position: \"Pre-Sales Support\",\n        office: \"New York\",\n        age: \"21\",\n        date: \"2011/12/12\",\n        salary: \"$106\"\n      }, {\n        name: \"Doris Wilder\",\n        position: \"Sales Assistant\",\n        office: \"Sidney\",\n        age: \"23\",\n        date: \"2010/09/20\",\n        salary: \"$85\"\n      }, {\n        name: \"Angelica Ramos\",\n        position: \"Chief Executive Officer (CEO)\",\n        office: \"London\",\n        age: \"47\",\n        date: \"2009/10/09\",\n        salary: \"$1\"\n      }, {\n        name: \"Gavin Joyce\",\n        position: \"Developer\",\n        office: \"Edinburgh\",\n        age: \"42\",\n        date: \"2010/12/22\",\n        salary: \"$92\"\n      }, {\n        name: \"Jennifer Chang\",\n        position: \"Regional Director\",\n        office: \"Singapore\",\n        age: \"28\",\n        date: \"2010/11/14\",\n        salary: \"$357\"\n      }, {\n        name: \"Brenden Wagner\",\n        position: \"Software Engineer\",\n        office: \"San Francisco\",\n        age: \"28\",\n        date: \"2011/06/07\",\n        salary: \"$206\"\n      }, {\n        name: \"Fiona Green\",\n        position: \"Chief Operating Officer (COO)\",\n        office: \"San Francisco\",\n        age: \"48\",\n        date: \"2010/03/11\",\n        salary: \"$850\"\n      }, {\n        name: \"Hermione Butler\",\n        position: \"Regional Director\",\n        office: \"London\",\n        age: \"47\",\n        date: \"2011/03/21\",\n        salary: \"$356\"\n      }, {\n        name: \"Lael Greer\",\n        position: \"Systems Administrator\",\n        office: \"London\",\n        age: \"21\",\n        date: \"2009/02/27\",\n        salary: \"$103\"\n      }, {\n        name: \"Jonas Alexander\",\n        position: \"Developer\",\n        office: \"San Francisco\",\n        age: \"30\",\n        date: \"2010/07/14\",\n        salary: \"$86\"\n      }, {\n        name: \"Shad Decker\",\n        position: \"Regional Director\",\n        office: \"Edinburgh\",\n        age: \"51\",\n        date: \"2008/11/13\",\n        salary: \"$183\"\n      }, {\n        name: \"Michael Bruce\",\n        position: \"Javascript Developer\",\n        office: \"Singapore\",\n        age: \"29\",\n        date: \"2011/06/27\",\n        salary: \"$183\"\n      }, {\n        name: \"Donna Snider\",\n        position: \"Customer Support\",\n        office: \"New York\",\n        age: \"27\",\n        date: \"2011/01/25\",\n        salary: \"$112\"\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(MDBDataTable, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    deliveries\n  } = state;\n  return {\n    deliveries\n  };\n}\n\nconst actionCreators = {\n  getAll: deliveryActions.getAll\n};\nconst connectedDeliveryListView = connect(mapState, actionCreators)(DeliveryListView);\nexport { connectedDeliveryListView as DeliveryListView };","map":{"version":3,"sources":["/home/vend/Projects/ticketing/fe/old/ticketing_web/src/Delivery/DeliveryListView.jsx"],"names":["React","connect","deliveryActions","MDBDataTable","DeliveryListView","Component","componentDidMount","props","getAll","render","deliveries","data","columns","label","field","sort","width","rows","name","position","office","age","date","salary","mapState","state","actionCreators","connectedDeliveryListView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { deliveryActions } from '../actions';\nimport { MDBDataTable } from \"mdbreact\";\n\nclass DeliveryListView extends React.Component {\n    componentDidMount() {\n        this.props.getAll();\n    }\n  \n\n    render() {\n        const { deliveries } = this.props;\n\n        const data = {\n            columns: [\n                {\n                    label: \"Delivery ID\",\n                    field: \"delivery.id\",\n                    sort: \"asc\",\n                    width: 150\n                },\n                {\n                    label: \"Customer Type\",\n                    field: \"customerType\",\n                    sort: \"asc\",\n                    width: 200\n                },\n                {\n                    label: \"Delivery Status\",\n                    field: \"deliveryStatus\",\n                    sort: \"asc\",\n                    width: 200\n                },\n                {\n                    label: \"Expected Delivery Time\",\n                    field: \"expectedDeliveryTime\",\n                    sort: \"asc\",\n                    width: 250\n                },\n                {\n                    label: \"Start date\",\n                    field: \"date\",\n                    sort: \"asc\",\n                    width: 150\n                },\n                {\n                    label: \"Salary\",\n                    field: \"salary\",\n                    sort: \"asc\",\n                    width: 100\n                }\n            ],\n            rows: [\n                {\n                    name: \"Tiger Nixon\",\n                    position: \"System Architect\",\n                    office: \"Edinburgh\",\n                    age: \"61\",\n                    date: \"2011/04/25\",\n                    salary: \"$320\"\n                },\n                {\n                    name: \"Yuri Berry\",\n                    position: \"Chief Marketing Officer (CMO)\",\n                    office: \"New York\",\n                    age: \"40\",\n                    date: \"2009/06/25\",\n                    salary: \"$675\"\n                },\n                {\n                    name: \"Caesar Vance\",\n                    position: \"Pre-Sales Support\",\n                    office: \"New York\",\n                    age: \"21\",\n                    date: \"2011/12/12\",\n                    salary: \"$106\"\n                },\n                {\n                    name: \"Doris Wilder\",\n                    position: \"Sales Assistant\",\n                    office: \"Sidney\",\n                    age: \"23\",\n                    date: \"2010/09/20\",\n                    salary: \"$85\"\n                },\n                {\n                    name: \"Angelica Ramos\",\n                    position: \"Chief Executive Officer (CEO)\",\n                    office: \"London\",\n                    age: \"47\",\n                    date: \"2009/10/09\",\n                    salary: \"$1\"\n                },\n                {\n                    name: \"Gavin Joyce\",\n                    position: \"Developer\",\n                    office: \"Edinburgh\",\n                    age: \"42\",\n                    date: \"2010/12/22\",\n                    salary: \"$92\"\n                },\n                {\n                    name: \"Jennifer Chang\",\n                    position: \"Regional Director\",\n                    office: \"Singapore\",\n                    age: \"28\",\n                    date: \"2010/11/14\",\n                    salary: \"$357\"\n                },\n                {\n                    name: \"Brenden Wagner\",\n                    position: \"Software Engineer\",\n                    office: \"San Francisco\",\n                    age: \"28\",\n                    date: \"2011/06/07\",\n                    salary: \"$206\"\n                },\n                {\n                    name: \"Fiona Green\",\n                    position: \"Chief Operating Officer (COO)\",\n                    office: \"San Francisco\",\n                    age: \"48\",\n                    date: \"2010/03/11\",\n                    salary: \"$850\"\n                },               \n                {\n                    name: \"Hermione Butler\",\n                    position: \"Regional Director\",\n                    office: \"London\",\n                    age: \"47\",\n                    date: \"2011/03/21\",\n                    salary: \"$356\"\n                },\n                {\n                    name: \"Lael Greer\",\n                    position: \"Systems Administrator\",\n                    office: \"London\",\n                    age: \"21\",\n                    date: \"2009/02/27\",\n                    salary: \"$103\"\n                },\n                {\n                    name: \"Jonas Alexander\",\n                    position: \"Developer\",\n                    office: \"San Francisco\",\n                    age: \"30\",\n                    date: \"2010/07/14\",\n                    salary: \"$86\"\n                },\n                {\n                    name: \"Shad Decker\",\n                    position: \"Regional Director\",\n                    office: \"Edinburgh\",\n                    age: \"51\",\n                    date: \"2008/11/13\",\n                    salary: \"$183\"\n                },\n                {\n                    name: \"Michael Bruce\",\n                    position: \"Javascript Developer\",\n                    office: \"Singapore\",\n                    age: \"29\",\n                    date: \"2011/06/27\",\n                    salary: \"$183\"\n                },\n                {\n                    name: \"Donna Snider\",\n                    position: \"Customer Support\",\n                    office: \"New York\",\n                    age: \"27\",\n                    date: \"2011/01/25\",\n                    salary: \"$112\"\n                }\n            ]\n        };        \n\n        return (\n            <MDBDataTable striped bordered hover data={data} />\n        );\n    }\n}\n\nfunction mapState(state) {\n    const { deliveries } = state;\n    return { deliveries };\n}\n\nconst actionCreators = {\n    getAll: deliveryActions.getAll\n}\n\nconst connectedDeliveryListView = connect(mapState, actionCreators)(DeliveryListView);\nexport { connectedDeliveryListView as DeliveryListView };"]},"metadata":{},"sourceType":"module"}