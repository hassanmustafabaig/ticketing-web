{"ast":null,"code":"var _jsxFileName = \"/home/vend/Projects/ticketing/fe/old/ticketing_web/src/Ticket/TicketListView.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ticketActions } from '../actions';\nimport { MDBDataTable } from \"mdbreact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TicketListView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ticket: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAll();\n  }\n\n  render() {\n    const {\n      ticket\n    } = this.props;\n    const data = {\n      columns: [{\n        label: \"Delivery ID\",\n        field: `${object.data[0].delivery.id}`,\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"Customer Type\",\n        field: \"delivery.customerType\",\n        sort: \"asc\",\n        width: 200\n      }, {\n        label: \"Priority\",\n        field: \"priority\",\n        sort: \"asc\",\n        width: 200\n      }, {\n        label: \"Satus\",\n        field: \"ticketStatus\",\n        sort: \"asc\",\n        width: 250\n      }],\n      rows: this.props.ticket != null ? this.props.ticket.items : []\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [ticket.loading && /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Loading deliveries...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 36\n      }, this), ticket.error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [\"ERROR: \", ticket.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 34\n      }, this), ticket.items && /*#__PURE__*/_jsxDEV(MDBDataTable, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    ticket\n  } = state;\n  return {\n    ticket\n  };\n}\n\nconst actionCreators = {\n  getAll: ticketActions.getAll\n};\nconst connectedTicketListView = connect(mapState, actionCreators)(TicketListView);\nexport { connectedTicketListView as TicketListView };","map":{"version":3,"sources":["/home/vend/Projects/ticketing/fe/old/ticketing_web/src/Ticket/TicketListView.jsx"],"names":["React","connect","ticketActions","MDBDataTable","TicketListView","Component","constructor","props","state","ticket","componentDidMount","getAll","render","data","columns","label","field","object","delivery","id","sort","width","rows","items","loading","error","mapState","actionCreators","connectedTicketListView"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAASC,YAAT,QAA6B,UAA7B;;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWI,MAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEH,MAAAA;AAAF,QAAa,KAAKF,KAAxB;AAEA,UAAMM,IAAI,GAAG;AACTC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,KAAK,EAAE,aADX;AAEIC,QAAAA,KAAK,EAAG,GAAEC,MAAM,CAACJ,IAAP,CAAY,CAAZ,EAAeK,QAAf,CAAwBC,EAAG,EAFzC;AAGIC,QAAAA,IAAI,EAAE,KAHV;AAIIC,QAAAA,KAAK,EAAE;AAJX,OADK,EAOL;AACIN,QAAAA,KAAK,EAAE,eADX;AAEIC,QAAAA,KAAK,EAAE,uBAFX;AAGII,QAAAA,IAAI,EAAE,KAHV;AAIIC,QAAAA,KAAK,EAAE;AAJX,OAPK,EAaL;AACIN,QAAAA,KAAK,EAAE,UADX;AAEIC,QAAAA,KAAK,EAAE,UAFX;AAGII,QAAAA,IAAI,EAAE,KAHV;AAIIC,QAAAA,KAAK,EAAE;AAJX,OAbK,EAmBL;AACIN,QAAAA,KAAK,EAAE,OADX;AAEIC,QAAAA,KAAK,EAAE,cAFX;AAGII,QAAAA,IAAI,EAAE,KAHV;AAIIC,QAAAA,KAAK,EAAE;AAJX,OAnBK,CADA;AA2BTC,MAAAA,IAAI,EAAE,KAAKf,KAAL,CAAWE,MAAX,IAAqB,IAArB,GAA4B,KAAKF,KAAL,CAAWE,MAAX,CAAkBc,KAA9C,GAAsD;AA3BnD,KAAb;AA8BA,wBACI;AAAA,iBACKd,MAAM,CAACe,OAAP,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADvB,EAEKf,MAAM,CAACgB,KAAP,iBAAgB;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,8BAAsChB,MAAM,CAACgB,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFrB,EAGKhB,MAAM,CAACc,KAAP,iBACG,QAAC,YAAD;AAAc,QAAA,OAAO,MAArB;AAAsB,QAAA,QAAQ,MAA9B;AAA+B,QAAA,KAAK,MAApC;AAAqC,QAAA,IAAI,EAAEV;AAA3C;AAAA;AAAA;AAAA;AAAA,cAJR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAzDwC;;AA4D7C,SAASa,QAAT,CAAkBlB,KAAlB,EAAyB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACH;;AAED,MAAMkB,cAAc,GAAG;AACnBhB,EAAAA,MAAM,EAAET,aAAa,CAACS;AADH,CAAvB;AAIA,MAAMiB,uBAAuB,GAAG3B,OAAO,CAACyB,QAAD,EAAWC,cAAX,CAAP,CAAkCvB,cAAlC,CAAhC;AACA,SAASwB,uBAAuB,IAAIxB,cAApC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { ticketActions } from '../actions';\nimport { MDBDataTable } from \"mdbreact\";\n\nclass TicketListView extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ticket: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.getAll();\n    }\n\n    render() {\n        const { ticket } = this.props;\n\n        const data = {\n            columns: [\n                {\n                    label: \"Delivery ID\",\n                    field: `${object.data[0].delivery.id}`,\n                    sort: \"asc\",\n                    width: 150\n                },\n                {\n                    label: \"Customer Type\",\n                    field: \"delivery.customerType\",\n                    sort: \"asc\",\n                    width: 200\n                },\n                {\n                    label: \"Priority\",\n                    field: \"priority\",\n                    sort: \"asc\",\n                    width: 200\n                },\n                {\n                    label: \"Satus\",\n                    field: \"ticketStatus\",\n                    sort: \"asc\",\n                    width: 250\n                }\n            ],\n            rows: this.props.ticket != null ? this.props.ticket.items : []\n        };\n\n        return (\n            <div>\n                {ticket.loading && <em>Loading deliveries...</em>}\n                {ticket.error && <span className=\"text-danger\">ERROR: {ticket.error}</span>}\n                {ticket.items &&\n                    <MDBDataTable striped bordered hover data={data} />\n                }\n            </div>\n\n        );\n    }\n}\n\nfunction mapState(state) {\n    const { ticket } = state;\n    return { ticket };\n}\n\nconst actionCreators = {\n    getAll: ticketActions.getAll\n}\n\nconst connectedTicketListView = connect(mapState, actionCreators)(TicketListView);\nexport { connectedTicketListView as TicketListView };"]},"metadata":{},"sourceType":"module"}